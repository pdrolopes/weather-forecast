{"version":3,"sources":["icons/right_chevron.svg","components/RegionItem.tsx","components/Card.tsx","components/Button.tsx","components/Transition.tsx","components/Loading.tsx","store/hooks.ts","service/openData.ts","store/region.ts","components/Region.tsx","components/ForecastItem.tsx","store/forecast.ts","components/Forecast.tsx","components/Layout.tsx","App.tsx","store/index.ts","index.tsx"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgRightChevron","_ref","svgRef","title","titleId","props","xmlns","width","height","fill","className","viewBox","ref","id","fillRule","d","ForwardRef","Container","styled","div","AreaCode","span","Title","RegionComponent","name","areaId","onClick","Card","Button","button","transitionName","CustomTransition","state","children","SwitchTransition","mode","CSSTransition","addEndListener","node","done","addEventListener","timeout","classNames","unmountOnExit","spin","keyframes","Loading","useAppDispatch","useDispatch","useAppSelector","useSelector","OPEN_DATA_URL","REGIONS_URL","FORECAST_URL","a","fetch","response","ok","Error","json","data","fetchForecast","url","loadRegions","createAsyncThunk","regionSlice","createSlice","initialState","innerState","kind","reducers","extraReducers","builder","addCase","pending","fulfilled","action","regions","payload","map","region","globalIdLocal","local","idAreaAviso","rejected","error","message","selectRegions","selectIsLoading","selectIsError","StyledTransition","Transition","CenterWrapper","RetryButton","ListWrapper","h2","Divider","Input","input","RegionList","onRegionSelect","dispatch","isLoading","isError","useState","filter","setFilter","filteredList","useMemo","toLowerCase","includes","useEffect","isEmpty","showEmptyMessage","transitionState","onChange","event","value","placeholder","RegionItem","dayjs","extend","localizedFormat","Header","Line","Value","Forecast","minTemperature","maxTemperature","chanceOfPrecipitation","date","formattedDate","format","loadForecast","regionId","condition","getState","forecast","forecastSlice","regionIdForecast","meta","arg","forecasts","f","Number","tMin","tMax","precipitaProb","Date","forecastDate","toISOString","selectForecast","LoadingWrapper","Subtitle","h3","hasSelectedRegion","undefined","showContent","regionLabel","index","ForecastItem","header","h1","Main","SideMenu","Layout","sideMenu","App","selectedRegion","setSelectedRegion","Region","store","configureStore","reducer","regionReducer","forecastReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51671f39.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRightChevron(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"currentColor\",\n    className: \"bi bi-chevron-right\",\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRightChevron);\nexport default __webpack_public_path__ + \"static/media/right_chevron.61c607bb.svg\";\nexport { ForwardRef as ReactComponent };","import React, { ReactElement } from 'react';\nimport { RegionType } from '../types';\nimport styled from 'styled-components';\nimport { ReactComponent as RightChevron } from '../icons/right_chevron.svg';\n\ntype Props = RegionType & {\n  onClick(): void;\n};\n\nfunction RegionComponent(props: Props): ReactElement {\n  const { name, areaId, onClick } = props;\n\n  return (\n    <Container onClick={onClick}>\n      <AreaCode>{areaId}</AreaCode>\n      <Title>{name}</Title>\n      <RightChevron />\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  min-height: 40px;\n  &:active {\n    filter: brightness(95%);\n  }\n  &:hover {\n    background-color: #d8efff;\n  }\n  cursor: pointer;\n  transition: all 100ms;\n`;\n\nconst AreaCode = styled.span`\n  font-weight: 500;\n  width: 40px;\n`;\nconst Title = styled.span`\n  display: block;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n  overflow: hidden;\n  text-align: left;\n  flex: 1;\n`;\n\nexport default RegionComponent;\n","import styled from 'styled-components';\n\nconst Card = styled.div`\n  background-color: white;\n  box-shadow: 0 2px 6px -2px gray;\n  padding: 8px;\n  border-radius: 4px;\n`;\n\nexport default Card;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 40px;\n  padding: 8px;\n  font-size: 16px;\n  border-radius: 10px;\n  vertical-align: middle;\n  cursor: pointer;\n  border: 0;\n  background: #4a93cc;\n  color: white;\n  transition: filter 200ms;\n\n  &:hover {\n    filter: brightness(85%);\n  }\n\n  &:active {\n    filter: brightness(110%);\n  }\n`;\n\nexport default Button;\n","import React, { ReactElement, ReactNode } from 'react';\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\nimport styled from 'styled-components';\n\ntype Props = { className?: string; state: string; children: ReactNode };\nconst transitionName = `fade`;\nconst transitionTime = 100;\nfunction CustomTransition(props: Props): ReactElement {\n  const { state, children, className } = props;\n\n  return (\n    <SwitchTransition mode=\"out-in\">\n      <CSSTransition\n        key={state}\n        addEndListener={(node, done) => node.addEventListener('transitionend', done, false)}\n        timeout={transitionTime}\n        classNames={transitionName}\n        unmountOnExit\n      >\n        <Container className={className}>{children}</Container>\n      </CSSTransition>\n    </SwitchTransition>\n  );\n}\n\nconst Container = styled.div`\n  &.${transitionName}-enter {\n    opacity: 0;\n  }\n  &.${transitionName}-exit {\n    opacity: 1;\n  }\n  &.${transitionName}-enter-active {\n    opacity: 1;\n    transition: opacity ${transitionTime}ms;\n  }\n  &.${transitionName}-exit-active {\n    opacity: 0;\n    transition: opacity ${transitionTime}ms;\n  }\n`;\n\nexport default CustomTransition;\n","import styled, { keyframes } from 'styled-components';\n\nconst spin = keyframes`\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n`;\n\nconst Loading = styled.div`\n  border: 10px solid #e0e0e0;\n  border-top: 10px solid #97d5fe;\n  border-radius: 50%;\n  width: 48px;\n  height: 48px;\n  min-height: 48px;\n  min-width: 48px;\n  animation: ${spin} 1s linear infinite;\n`;\n\nexport default Loading;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '.';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","const OPEN_DATA_URL = 'http://api.ipma.pt/open-data';\nconst REGIONS_URL = `${OPEN_DATA_URL}/distrits-islands.json`;\nconst FORECAST_URL = `${OPEN_DATA_URL}/forecast/meteorology/cities/daily`;\n\ntype OpenDataResponse<T> = {\n  owner: string;\n  country: string;\n  data: T;\n};\n\nexport type Region = {\n  idAreaAviso: string;\n  idConcelho: number;\n  idDistrito: number;\n  globalIdLocal: number;\n  latitude: string;\n  longitude: string;\n  local: string;\n};\n\nexport type DailyForecast = {\n  precipitaProb: string;\n  tMin: string;\n  tMax: string;\n  predWindDir: string;\n  idWeatherType: number;\n  classWindSpeed: number;\n  longitude: string;\n  forecastDate: string;\n  latitude: string;\n};\n\nexport async function fetchRegions(): Promise<Array<Region>> {\n  const response = await fetch(REGIONS_URL);\n\n  if (!response.ok) {\n    throw Error('Something wrong happened');\n  }\n\n  const json: OpenDataResponse<Array<Region>> = await response.json();\n\n  return json.data;\n}\n\nexport async function fetchForecast(id: number): Promise<Array<DailyForecast>> {\n  const url = `${FORECAST_URL}/${id}.json`;\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    throw Error('Something wrong happened');\n  }\n\n  const json: OpenDataResponse<Array<DailyForecast>> = await response.json();\n\n  return json.data;\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '.';\nimport { fetchRegions } from '../service/openData';\nimport { RegionType } from '../types';\n\ntype FailedState = {\n  kind: 'Failed';\n  error: string;\n};\ntype LoadedState = {\n  kind: 'Loaded';\n  regions: Array<RegionType>;\n};\ntype LoadingState = {\n  kind: 'Loading';\n};\ntype IdleState = {\n  kind: 'Idle';\n};\n\ntype State = IdleState | LoadingState | LoadedState | FailedState;\ntype RegionState = {\n  innerState: State;\n};\n\nconst initialState: RegionState = {\n  innerState: { kind: 'Idle' },\n};\n\nexport const loadRegions = createAsyncThunk('region/load', fetchRegions);\n\nexport const regionSlice = createSlice({\n  name: 'region',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(loadRegions.pending, (state) => {\n        state.innerState = { kind: 'Loading' };\n      })\n      .addCase(loadRegions.fulfilled, (state, action) => {\n        const regions = action.payload.map((region) => ({\n          id: region.globalIdLocal,\n          name: region.local,\n          areaId: region.idAreaAviso,\n        }));\n\n        state.innerState = {\n          kind: 'Loaded',\n          regions,\n        };\n      })\n      .addCase(loadRegions.rejected, (state, action) => {\n        state.innerState = {\n          kind: 'Failed',\n          error: action.error.message || '',\n        };\n      });\n  },\n});\n\nexport const selectRegions = (state: RootState): Array<RegionType> => {\n  const { innerState } = state.region;\n  if (innerState.kind === 'Loaded') {\n    return innerState.regions;\n  }\n\n  return [];\n};\nexport const selectIsLoading = (state: RootState): boolean =>\n  state.region.innerState.kind === 'Loading';\n\nexport const selectIsError = (state: RootState): boolean =>\n  state.region.innerState.kind === 'Failed';\n\nexport default regionSlice.reducer;\n","import React, { useState, useMemo, ChangeEventHandler, useEffect, ReactElement } from 'react';\nimport RegionItem from './RegionItem';\nimport Card from './Card';\nimport Button from './Button';\nimport Transition from './Transition';\nimport Loading from './Loading';\nimport { RegionType } from '../types';\nimport styled from 'styled-components';\nimport { useAppSelector, useAppDispatch } from '../store/hooks';\nimport { loadRegions, selectIsError, selectIsLoading, selectRegions } from '../store/region';\n\ntype Props = {\n  onRegionSelect(id: RegionType): void;\n};\n\nfunction RegionList(props: Props): ReactElement {\n  const { onRegionSelect } = props;\n\n  const dispatch = useAppDispatch();\n  const regions = useAppSelector(selectRegions);\n  const isLoading = useAppSelector(selectIsLoading);\n  const isError = useAppSelector(selectIsError);\n\n  const [filter, setFilter] = useState('');\n  const filteredList = useMemo(\n    () =>\n      regions.filter(\n        (region) =>\n          region.name.toLowerCase().includes(filter.toLowerCase()) ||\n          region.areaId.toLowerCase().includes(filter.toLowerCase())\n      ),\n    [filter, regions]\n  );\n\n  useEffect(() => {\n    dispatch(loadRegions());\n  }, [dispatch]);\n\n  const handleInputChange: ChangeEventHandler<HTMLInputElement> = (event) =>\n    setFilter(event.target.value);\n  const isEmpty = filteredList.length === 0;\n  const showEmptyMessage = isEmpty && !isLoading && !isError && !!filter;\n  const handleRetryClick = () => dispatch(loadRegions());\n  const transitionState = `${isLoading}-${isEmpty}-${isError}-${showEmptyMessage}`;\n\n  return (\n    <Container>\n      <Title>Regions</Title>\n      <Input onChange={handleInputChange} value={filter} placeholder=\"Filter region\" />\n\n      <Divider />\n\n      <StyledTransition state={transitionState}>\n        <>\n          <ListWrapper>\n            {filteredList.map((region) => {\n              const { id, name, areaId } = region;\n              return (\n                <RegionItem\n                  key={id}\n                  id={id}\n                  name={name}\n                  areaId={areaId}\n                  onClick={() => onRegionSelect(region)}\n                />\n              );\n            })}\n          </ListWrapper>\n\n          {isLoading && (\n            <CenterWrapper>\n              <Loading />\n            </CenterWrapper>\n          )}\n          {showEmptyMessage && <CenterWrapper>No region found</CenterWrapper>}\n          {isError && (\n            <CenterWrapper>\n              There was a problem\n              <RetryButton onClick={handleRetryClick}>Retry</RetryButton>\n            </CenterWrapper>\n          )}\n        </>\n      </StyledTransition>\n    </Container>\n  );\n}\n\nconst Container = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  min-width: 330px;\n`;\n\nconst StyledTransition = styled(Transition)`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  height: 100%;\n`;\n\nconst CenterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  flex-direction: column;\n  color: #0a1937;\n`;\n\nconst RetryButton = styled(Button)`\n  min-width: 150px;\n  margin-top: 16px;\n`;\n\nconst ListWrapper = styled.div`\n  display: flex;\n  overflow-y: scroll;\n  flex-direction: column;\n  width: 100%;\n\n  & > * {\n    border-bottom: 1px solid #e0e0e0;\n  }\n\n  // Hide scroll bar\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* Internet Explorer 10+ */\n  &::-webkit-scrollbar {\n    /* WebKit */\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst Title = styled.h2`\n  margin-top: 0;\n  font-size: 20px;\n  flex-shrink: 0;\n  color: #0a1937;\n`;\n\nconst Divider = styled.div`\n  height: 1px;\n  margin-left: -8px;\n  margin-right: -8px;\n  background-color: #d3d3d3;\n  width: calc(100% + 16px);\n  flex-shrink: 0;\n`;\n\nconst Input = styled.input`\n  width: calc(100% - 16px);\n  height: 2rem;\n  font-size: 16px;\n  background-color: transparent;\n  border: none;\n  border-bottom: 2px solid #d3d3d3;\n  &:focus {\n    outline: none;\n  }\n  margin-bottom: 8px;\n  padding-left: 8px;\n  padding-right: 8px;\n  flex-shrink: 0;\n`;\n\nexport default RegionList;\n","import React, { ReactElement } from 'react';\nimport { ForecastType } from '../types';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\ndayjs.extend(localizedFormat);\n\ntype Props = ForecastType;\n\nfunction Forecast(props: Props): ReactElement {\n  const { minTemperature, maxTemperature, chanceOfPrecipitation, date } = props;\n\n  const formattedDate = dayjs(date).format('LL');\n\n  return (\n    <Container>\n      <Header>{formattedDate}</Header>\n      <Line>\n        <span>Minimum temperature:</span>\n        <Value>{minTemperature}ᵒC</Value>\n      </Line>\n      <Line>\n        <span>Maximum temperature:</span>\n        <Value>{maxTemperature}ᵒC</Value>\n      </Line>\n      <Line>\n        <span>% Precipitation:</span>\n        <Value>{chanceOfPrecipitation}%</Value>\n      </Line>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  border-radius: 8px;\n  border: 2px solid gray;\n  background-color: white;\n`;\nconst Header = styled.div`\n  font-weight: 500;\n  margin-bottom: 10px;\n  background-color: #d8efff;\n  border-radius: 8px 8px 0 0;\n  border-bottom: 1px solid gray;\n  padding: 4px;\n  padding-left: 8px;\n`;\n\nconst Line = styled.div`\n  display: flex;\n  padding-left: 8px;\n  justify-content: space-between;\n  margin-bottom: 4px;\n`;\n\nconst Value = styled.span`\n  flex-basis: 70px;\n`;\n\nexport default Forecast;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '.';\nimport { fetchForecast, DailyForecast as OpenDataForcast } from '../service/openData';\nimport { ForecastType } from '../types';\n\ntype IdleState = {\n  kind: 'Idle';\n};\ntype LoadingState = {\n  kind: 'Loading';\n  regionId: number;\n};\ntype LoadedState = {\n  kind: 'Loaded';\n  regionId: number;\n  forecasts: Array<ForecastType>;\n};\ntype FailedState = {\n  kind: 'Failed';\n  regionId: number;\n  error: string;\n};\n\ntype State = IdleState | LoadingState | LoadedState | FailedState;\ntype ForecastState = {\n  innerState: State;\n};\n\nconst initialState: ForecastState = {\n  innerState: { kind: 'Idle' },\n};\n\nexport const loadForecast = createAsyncThunk<Array<OpenDataForcast>, number, { state: RootState }>(\n  'forecast/load',\n  async (regionId: number) => fetchForecast(regionId),\n  {\n    condition(regionId, { getState }) {\n      const { innerState } = getState().forecast;\n      const isAlreadyLoadingRegion =\n        (innerState.kind === 'Loaded' || innerState.kind === 'Loading') &&\n        innerState.regionId === regionId;\n\n      if (isAlreadyLoadingRegion) {\n        return false; // Returning false cancels this thunk action\n      }\n    },\n  }\n);\n\nexport const forecastSlice = createSlice({\n  name: 'forecast',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(loadForecast.pending, (state, action) => {\n        const regionIdForecast = action.meta.arg;\n        state.innerState = { kind: 'Loading', regionId: regionIdForecast };\n      })\n      .addCase(loadForecast.fulfilled, (state, action) => {\n        const regionIdForecast = action.meta.arg;\n        // Fulfilled forecast might be for an old region\n        const shouldIgnoreAction =\n          state.innerState.kind !== 'Idle' && state.innerState.regionId !== regionIdForecast;\n        if (shouldIgnoreAction) {\n          return;\n        }\n\n        const forecasts = action.payload.map((f) => ({\n          minTemperature: Number(f.tMin),\n          maxTemperature: Number(f.tMax),\n          chanceOfPrecipitation: Number(f.precipitaProb),\n          date: new Date(f.forecastDate).toISOString(),\n        }));\n\n        state.innerState = {\n          kind: 'Loaded',\n          forecasts: forecasts,\n          regionId: regionIdForecast,\n        };\n      })\n      .addCase(loadForecast.rejected, (state, action) => {\n        const regionIdForecast = action.meta.arg;\n\n        // Rejected forecast might be for an old region\n        const shouldIgnoreAction =\n          state.innerState.kind !== 'Idle' && state.innerState.regionId !== regionIdForecast;\n\n        if (shouldIgnoreAction) {\n          return;\n        }\n\n        state.innerState = {\n          kind: 'Failed',\n          error: action.error.message || '',\n          regionId: regionIdForecast,\n        };\n      });\n  },\n});\n\nexport const selectForecast = (state: RootState): Array<ForecastType> => {\n  const { innerState } = state.forecast;\n  if (innerState.kind === 'Loaded') {\n    return innerState.forecasts;\n  }\n\n  return [];\n};\nexport const selectIsLoading = (state: RootState): boolean =>\n  state.forecast.innerState.kind === 'Loading';\n\nexport const selectIsError = (state: RootState): boolean =>\n  state.forecast.innerState.kind === 'Failed';\n\nexport default forecastSlice.reducer;\n","import React, { useEffect, ReactElement } from 'react';\nimport Button from './Button';\nimport Card from './Card';\nimport ForecastItem from './ForecastItem';\nimport Loading from './Loading';\nimport Transition from './Transition';\nimport styled from 'styled-components';\nimport { RegionType } from '../types';\nimport { loadForecast, selectForecast, selectIsError, selectIsLoading } from '../store/forecast';\nimport { useAppSelector, useAppDispatch } from '../store/hooks';\n\ntype Props = {\n  region?: RegionType;\n};\n\nfunction Forecast(props: Props): ReactElement {\n  const { region } = props;\n\n  const dispatch = useAppDispatch();\n  const forecasts = useAppSelector(selectForecast);\n  const isLoading = useAppSelector(selectIsLoading);\n  const isError = useAppSelector(selectIsError);\n\n  useEffect(() => {\n    region && dispatch(loadForecast(region.id));\n  }, [region, dispatch]);\n\n  const hasSelectedRegion = region !== undefined;\n  const showContent = hasSelectedRegion && !isLoading && !isError;\n  const regionLabel = region ? `${region.name} (${region.areaId})` : '';\n  const handleRetryClick = () => region && dispatch(loadForecast(region.id));\n  const transitionState = `${isLoading}${showContent}${isError}${region?.id}`;\n\n  return (\n    <Container>\n      <Title>Forecast</Title>\n      {hasSelectedRegion && <Subtitle>Region: {regionLabel}</Subtitle>}\n\n      <StyledTransition state={transitionState}>\n        <>\n          {isLoading && (\n            <LoadingWrapper>\n              <Loading />\n            </LoadingWrapper>\n          )}\n          {showContent && (\n            <ListWrapper>\n              {forecasts.map((forecast, index) => (\n                <ForecastItem key={index} {...forecast} />\n              ))}\n            </ListWrapper>\n          )}\n          {isError && (\n            <LoadingWrapper>\n              There was a problem\n              <RetryButton onClick={handleRetryClick}>Retry</RetryButton>\n            </LoadingWrapper>\n          )}\n        </>\n      </StyledTransition>\n    </Container>\n  );\n}\n\nconst Container = styled(Card)`\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  min-width: 400px;\n`;\n\nconst LoadingWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst StyledTransition = styled(Transition)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nconst RetryButton = styled(Button)`\n  min-width: 150px;\n  margin-top: 16px;\n`;\n\nconst Title = styled.h2`\n  margin-top: 0;\n  font-size: 20px;\n  color: #0a1937;\n`;\nconst ListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  & > * {\n    margin-top: 8px;\n    margin-bottom: 8px;\n  }\n`;\n\nconst Subtitle = styled.h3`\n  margin-top: 0;\n  font-size: 16px;\n  color: #0a1937;\n`;\n\nexport default Forecast;\n","import React, { ReactElement, ReactNode } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  children: ReactNode;\n  sideMenu: ReactNode;\n};\n\nfunction Layout(props: Props): ReactElement {\n  const { children, sideMenu } = props;\n\n  return (\n    <Container>\n      <Header>\n        <Title>Weather Forecast</Title>\n      </Header>\n      <SideMenu>{sideMenu}</SideMenu>\n      <Main>{children}</Main>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  height: calc(100vh - 16px);\n  display: grid;\n  background-color: #ecedf4;\n  grid-template-columns: auto minmax(0, 9fr);\n  grid-template-rows: 3rem minmax(0, 1fr);\n  grid-template-areas:\n    'header header'\n    'sidebar main';\n\n  padding-bottom: 16px;\n  gap: 16px;\n`;\n\nconst Header = styled.header`\n  grid-area: header;\n  background-color: #ffffff;\n  height: (3rem - 16px);\n  padding: 8px;\n  box-shadow: 0 2px 8px -2px gray;\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-weight: 400;\n  font-size: 32px;\n  color: #0a1937;\n  margin: 0;\n`;\n\nconst Main = styled.div`\n  grid-area: main;\n  margin-right: 16px;\n  display: flex;\n`;\n\nconst SideMenu = styled.div`\n  grid-area: sidebar;\n  margin-left: 16px;\n  display: flex;\n`;\n\nexport default Layout;\n","import React, { ReactElement, useState } from 'react';\nimport Region from './components/Region';\nimport Forecast from './components/Forecast';\nimport { RegionType } from './types';\nimport Layout from './components/Layout';\n\nfunction App(): ReactElement {\n  const [selectedRegion, setSelectedRegion] = useState<RegionType | undefined>(undefined);\n\n  return (\n    <Layout sideMenu={<Region onRegionSelect={setSelectedRegion} />}>\n      <Forecast region={selectedRegion} />\n    </Layout>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport regionReducer from './region';\nimport forecastReducer from './forecast';\n\nexport const store = configureStore({\n  reducer: {\n    region: regionReducer,\n    forecast: forecastReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}